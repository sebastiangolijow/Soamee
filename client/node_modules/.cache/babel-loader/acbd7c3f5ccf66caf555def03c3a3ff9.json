{"ast":null,"code":"var pkg = require('./package.json');\n\nmodule.exports = bestbuy;\n\nfunction bestbuy(_options) {\n  var options = setupOptions(_options);\n\n  const availabilityEndpoint = require('./lib/availability')(options);\n\n  const realTimeAvailabilityEndpoint = require('./lib/real-time-availability')(options);\n\n  const categoriesEndpoint = require('./lib/categories')(options);\n\n  const productsEndpoint = require('./lib/products')(options);\n\n  const openBoxEndpoint = require('./lib/openBox')(options);\n\n  const storesEndpoint = require('./lib/stores')(options);\n\n  if (!options.key) throw new Error('A Best Buy developer API key is required');\n  return {\n    options: options,\n    availability: availabilityEndpoint.availability,\n    availabilityAsStream: availabilityEndpoint.availabilityAsStream,\n    realTimeAvailability: realTimeAvailabilityEndpoint.realTimeAvailability,\n    openBox: openBoxEndpoint.openBox,\n    openBoxAsStream: openBoxEndpoint.openBoxAsStream,\n    categories: categoriesEndpoint.categories,\n    categoriesAsStream: categoriesEndpoint.categoriesAsStream,\n    products: productsEndpoint.products,\n    productsAsStream: productsEndpoint.productsAsStream,\n    recommendations: require('./lib/recommendations')(options),\n    stores: storesEndpoint.stores,\n    storesAsStream: storesEndpoint.storesAsStream,\n    warranties: require('./lib/warranties')(options),\n    version: require('./lib/version')(options)\n  };\n}\n\nfunction setupOptions(_opts) {\n  var opts = {\n    key: process.env.BBY_API_KEY,\n    url: 'https://api.bestbuy.com',\n    debug: false,\n    headers: {\n      'User-Agent': `bestbuy-sdk-js/${pkg.version};nodejs`\n    },\n    requestsPerSecond: 5,\n    maxRetries: 0,\n    retryInterval: 2000,\n    timeout: 5000\n  };\n\n  if (typeof _opts === 'string') {\n    opts.key = _opts;\n  } else if (typeof _opts === 'object') {\n    opts = Object.assign(opts, _opts);\n  }\n\n  opts.apiService = require('./lib/api.service')(opts);\n  opts.apiStreamService = require('./lib/api.stream.service')(opts);\n  return opts;\n}","map":{"version":3,"sources":["C:/Users/sebas/Desktop/folders/Jobs/Elaastacloud/client/node_modules/bestbuy/index.js"],"names":["pkg","require","module","exports","bestbuy","_options","options","setupOptions","availabilityEndpoint","realTimeAvailabilityEndpoint","categoriesEndpoint","productsEndpoint","openBoxEndpoint","storesEndpoint","key","Error","availability","availabilityAsStream","realTimeAvailability","openBox","openBoxAsStream","categories","categoriesAsStream","products","productsAsStream","recommendations","stores","storesAsStream","warranties","version","_opts","opts","process","env","BBY_API_KEY","url","debug","headers","requestsPerSecond","maxRetries","retryInterval","timeout","Object","assign","apiService","apiStreamService"],"mappings":"AAAA,IAAIA,GAAG,GAAGC,OAAO,CAAC,gBAAD,CAAjB;;AAEAC,MAAM,CAACC,OAAP,GAAiBC,OAAjB;;AAEA,SAASA,OAAT,CAAkBC,QAAlB,EAA4B;AAC1B,MAAIC,OAAO,GAAGC,YAAY,CAACF,QAAD,CAA1B;;AAEA,QAAMG,oBAAoB,GAAGP,OAAO,CAAC,oBAAD,CAAP,CAA8BK,OAA9B,CAA7B;;AACA,QAAMG,4BAA4B,GAAGR,OAAO,CAAC,8BAAD,CAAP,CAAwCK,OAAxC,CAArC;;AACA,QAAMI,kBAAkB,GAAGT,OAAO,CAAC,kBAAD,CAAP,CAA4BK,OAA5B,CAA3B;;AACA,QAAMK,gBAAgB,GAAGV,OAAO,CAAC,gBAAD,CAAP,CAA0BK,OAA1B,CAAzB;;AACA,QAAMM,eAAe,GAAGX,OAAO,CAAC,eAAD,CAAP,CAAyBK,OAAzB,CAAxB;;AACA,QAAMO,cAAc,GAAGZ,OAAO,CAAC,cAAD,CAAP,CAAwBK,OAAxB,CAAvB;;AAEA,MAAI,CAACA,OAAO,CAACQ,GAAb,EAAkB,MAAM,IAAIC,KAAJ,CAAU,0CAAV,CAAN;AAElB,SAAO;AACLT,IAAAA,OAAO,EAAEA,OADJ;AAELU,IAAAA,YAAY,EAAER,oBAAoB,CAACQ,YAF9B;AAGLC,IAAAA,oBAAoB,EAAET,oBAAoB,CAACS,oBAHtC;AAILC,IAAAA,oBAAoB,EAAET,4BAA4B,CAACS,oBAJ9C;AAKLC,IAAAA,OAAO,EAAEP,eAAe,CAACO,OALpB;AAMLC,IAAAA,eAAe,EAAER,eAAe,CAACQ,eAN5B;AAOLC,IAAAA,UAAU,EAAEX,kBAAkB,CAACW,UAP1B;AAQLC,IAAAA,kBAAkB,EAAEZ,kBAAkB,CAACY,kBARlC;AASLC,IAAAA,QAAQ,EAAEZ,gBAAgB,CAACY,QATtB;AAULC,IAAAA,gBAAgB,EAAEb,gBAAgB,CAACa,gBAV9B;AAWLC,IAAAA,eAAe,EAAExB,OAAO,CAAC,uBAAD,CAAP,CAAiCK,OAAjC,CAXZ;AAYLoB,IAAAA,MAAM,EAAEb,cAAc,CAACa,MAZlB;AAaLC,IAAAA,cAAc,EAAEd,cAAc,CAACc,cAb1B;AAcLC,IAAAA,UAAU,EAAE3B,OAAO,CAAC,kBAAD,CAAP,CAA4BK,OAA5B,CAdP;AAeLuB,IAAAA,OAAO,EAAE5B,OAAO,CAAC,eAAD,CAAP,CAAyBK,OAAzB;AAfJ,GAAP;AAiBD;;AAED,SAASC,YAAT,CAAuBuB,KAAvB,EAA8B;AAC5B,MAAIC,IAAI,GAAG;AACTjB,IAAAA,GAAG,EAAEkB,OAAO,CAACC,GAAR,CAAYC,WADR;AAETC,IAAAA,GAAG,EAAE,yBAFI;AAGTC,IAAAA,KAAK,EAAE,KAHE;AAITC,IAAAA,OAAO,EAAE;AACP,oBAAe,kBAAiBrC,GAAG,CAAC6B,OAAQ;AADrC,KAJA;AAOTS,IAAAA,iBAAiB,EAAE,CAPV;AAQTC,IAAAA,UAAU,EAAE,CARH;AASTC,IAAAA,aAAa,EAAE,IATN;AAUTC,IAAAA,OAAO,EAAE;AAVA,GAAX;;AAaA,MAAI,OAAOX,KAAP,KAAiB,QAArB,EAA+B;AAC7BC,IAAAA,IAAI,CAACjB,GAAL,GAAWgB,KAAX;AACD,GAFD,MAEO,IAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;AACpCC,IAAAA,IAAI,GAAGW,MAAM,CAACC,MAAP,CAAcZ,IAAd,EAAoBD,KAApB,CAAP;AACD;;AAEDC,EAAAA,IAAI,CAACa,UAAL,GAAkB3C,OAAO,CAAC,mBAAD,CAAP,CAA6B8B,IAA7B,CAAlB;AACAA,EAAAA,IAAI,CAACc,gBAAL,GAAwB5C,OAAO,CAAC,0BAAD,CAAP,CAAoC8B,IAApC,CAAxB;AAEA,SAAOA,IAAP;AACD","sourcesContent":["var pkg = require('./package.json');\n\nmodule.exports = bestbuy;\n\nfunction bestbuy (_options) {\n  var options = setupOptions(_options);\n\n  const availabilityEndpoint = require('./lib/availability')(options);\n  const realTimeAvailabilityEndpoint = require('./lib/real-time-availability')(options);\n  const categoriesEndpoint = require('./lib/categories')(options);\n  const productsEndpoint = require('./lib/products')(options);\n  const openBoxEndpoint = require('./lib/openBox')(options);\n  const storesEndpoint = require('./lib/stores')(options);\n\n  if (!options.key) throw new Error('A Best Buy developer API key is required');\n\n  return {\n    options: options,\n    availability: availabilityEndpoint.availability,\n    availabilityAsStream: availabilityEndpoint.availabilityAsStream,\n    realTimeAvailability: realTimeAvailabilityEndpoint.realTimeAvailability,\n    openBox: openBoxEndpoint.openBox,\n    openBoxAsStream: openBoxEndpoint.openBoxAsStream,\n    categories: categoriesEndpoint.categories,\n    categoriesAsStream: categoriesEndpoint.categoriesAsStream,\n    products: productsEndpoint.products,\n    productsAsStream: productsEndpoint.productsAsStream,\n    recommendations: require('./lib/recommendations')(options),\n    stores: storesEndpoint.stores,\n    storesAsStream: storesEndpoint.storesAsStream,\n    warranties: require('./lib/warranties')(options),\n    version: require('./lib/version')(options)\n  };\n}\n\nfunction setupOptions (_opts) {\n  var opts = {\n    key: process.env.BBY_API_KEY,\n    url: 'https://api.bestbuy.com',\n    debug: false,\n    headers: {\n      'User-Agent': `bestbuy-sdk-js/${pkg.version};nodejs`\n    },\n    requestsPerSecond: 5,\n    maxRetries: 0,\n    retryInterval: 2000,\n    timeout: 5000\n  };\n\n  if (typeof _opts === 'string') {\n    opts.key = _opts;\n  } else if (typeof _opts === 'object') {\n    opts = Object.assign(opts, _opts);\n  }\n\n  opts.apiService = require('./lib/api.service')(opts);\n  opts.apiStreamService = require('./lib/api.stream.service')(opts);\n\n  return opts;\n}\n"]},"metadata":{},"sourceType":"script"}