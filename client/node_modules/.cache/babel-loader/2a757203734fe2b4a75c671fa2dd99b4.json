{"ast":null,"code":"module.exports = apiStreamXmlServiceFactory;\n\nvar xmlNodes = require('@flet/xml-nodes');\n\nvar through = require('through2');\n\nvar pump = require('pump');\n\nvar filterKeys = {\n  'products.*': 'product',\n  'categories.*': 'category',\n  'stores.*': 'store'\n};\n\nfunction apiStreamXmlServiceFactory(opts) {\n  function apiStreamXmlService(jsonFilterKey, req) {\n    var outputStream = through();\n\n    if (req.url.endsWith('.xml')) {\n      streamSingleItem(filterKeys[jsonFilterKey], req, outputStream);\n    } else {\n      streamAllData(filterKeys[jsonFilterKey], req, outputStream);\n    }\n\n    return outputStream;\n  }\n\n  function streamSingleItem(xmlFilterKey, req, stream) {\n    req.responseType = 'stream';\n    opts.apiService(req).then(result => {\n      stream.emit('total', 1);\n      var xmlStream = xmlNodes(xmlFilterKey);\n      xmlStream.on('data', data => stream.write(data));\n      pump(result, xmlStream, err => {\n        if (err) console.error(err);\n        stream.end();\n      });\n    });\n  }\n\n  function streamAllData(xmlFilterKey, req, stream) {\n    if (!req.responseType) req.responseType = 'stream';\n    if (!req.params.cursorMark) req.params.cursorMark = '*';\n    if (!req.params.pageSize) req.params.pageSize = 100;\n    return opts.apiService(req).then(result => {\n      var header = {};\n      var attributes = attrFinder(['nextCursorMark', 'total']);\n      var xmlStream = xmlNodes(xmlFilterKey);\n      xmlStream.on('data', data => stream.write(data));\n      attributes.on('nextCursorMark', nextCursorMark => {\n        header.nextCursorMark = nextCursorMark;\n      });\n      attributes.on('total', total => {\n        header.total = Number(total);\n\n        if (req.params.cursorMark === '*') {\n          // emit total on first response\n          stream.emit('total', header.total);\n        }\n      }); // pipe result -> xmlStream\n\n      pump(result, attributes, xmlStream, err => {\n        if (err) console.error(err);\n\n        if (header.nextCursorMark && header.nextCursorMark === req.params.cursorMark) {\n          stream.end();\n        } else if (!header || !header.nextCursorMark) {\n          // endpoint does not have cursorMark support\n          stream.end();\n        } else {\n          req.params = Object.assign({}, req.params, {\n            cursorMark: header.nextCursorMark\n          });\n          streamAllData(xmlFilterKey, req, stream).catch(err => {\n            throw err;\n          });\n        }\n      });\n    }).catch(error => {\n      stream.emit('error', error);\n      stream.end();\n    });\n  }\n\n  return apiStreamXmlService;\n}\n\nfunction attrFinder(attrs) {\n  var soFar = '';\n  var allAttrs = {};\n  var allAttrsRegex = {};\n  var attrsFound = 0;\n  attrs.forEach(a => {\n    allAttrsRegex[a] = new RegExp(a + '=\"([^\"]+)\"');\n  });\n  return through(function (chunk, enc, done) {\n    if (attrsFound !== attrs.length) {\n      soFar += String(chunk);\n      attrs.forEach(attr => {\n        if (allAttrs[attr]) return;\n        var val = soFar.match(allAttrsRegex[attr]);\n\n        if (val) {\n          allAttrs[attr] = val[1];\n          this.emit(attr, allAttrs[attr]);\n          attrsFound++;\n        }\n      });\n\n      if (attrsFound === attrs.length) {\n        soFar = null;\n      }\n    }\n\n    this.push(chunk);\n    done();\n  });\n}","map":{"version":3,"sources":["C:/Users/sebas/Desktop/folders/Jobs/Elaastacloud/client/node_modules/bestbuy/lib/api.stream.xml.service.js"],"names":["module","exports","apiStreamXmlServiceFactory","xmlNodes","require","through","pump","filterKeys","opts","apiStreamXmlService","jsonFilterKey","req","outputStream","url","endsWith","streamSingleItem","streamAllData","xmlFilterKey","stream","responseType","apiService","then","result","emit","xmlStream","on","data","write","err","console","error","end","params","cursorMark","pageSize","header","attributes","attrFinder","nextCursorMark","total","Number","Object","assign","catch","attrs","soFar","allAttrs","allAttrsRegex","attrsFound","forEach","a","RegExp","chunk","enc","done","length","String","attr","val","match","push"],"mappings":"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","sourcesContent":["module.exports = apiStreamXmlServiceFactory;\nvar xmlNodes = require('@flet/xml-nodes');\nvar through = require('through2');\nvar pump = require('pump');\n\nvar filterKeys = {\n  'products.*': 'product',\n  'categories.*': 'category',\n  'stores.*': 'store'\n};\n\nfunction apiStreamXmlServiceFactory (opts) {\n  function apiStreamXmlService (jsonFilterKey, req) {\n    var outputStream = through();\n\n    if (req.url.endsWith('.xml')) {\n      streamSingleItem(filterKeys[jsonFilterKey], req, outputStream);\n    } else {\n      streamAllData(filterKeys[jsonFilterKey], req, outputStream);\n    }\n    return outputStream;\n  }\n\n  function streamSingleItem (xmlFilterKey, req, stream) {\n    req.responseType = 'stream';\n\n    opts.apiService(req).then(result => {\n      stream.emit('total', 1);\n\n      var xmlStream = xmlNodes(xmlFilterKey);\n      xmlStream.on('data', data => stream.write(data));\n\n      pump(result, xmlStream, err => {\n        if (err) console.error(err);\n        stream.end();\n      });\n    });\n  }\n\n  function streamAllData (xmlFilterKey, req, stream) {\n    if (!req.responseType) req.responseType = 'stream';\n\n    if (!req.params.cursorMark) req.params.cursorMark = '*';\n    if (!req.params.pageSize) req.params.pageSize = 100;\n\n    return opts.apiService(req).then(result => {\n      var header = {};\n\n      var attributes = attrFinder(['nextCursorMark', 'total']);\n\n      var xmlStream = xmlNodes(xmlFilterKey);\n\n      xmlStream.on('data', data => stream.write(data));\n\n      attributes.on('nextCursorMark', nextCursorMark => {\n        header.nextCursorMark = nextCursorMark;\n      });\n\n      attributes.on('total', total => {\n        header.total = Number(total);\n        if (req.params.cursorMark === '*') {\n        // emit total on first response\n          stream.emit('total', header.total);\n        }\n      });\n\n      // pipe result -> xmlStream\n      pump(result, attributes, xmlStream, err => {\n        if (err) console.error(err);\n        if (header.nextCursorMark && header.nextCursorMark === req.params.cursorMark) {\n          stream.end();\n        } else if (!header || !header.nextCursorMark) {\n          // endpoint does not have cursorMark support\n          stream.end();\n        } else {\n          req.params = Object.assign({}, req.params, { cursorMark: header.nextCursorMark });\n          streamAllData(xmlFilterKey, req, stream).catch(err => { throw err; });\n        }\n      });\n    })\n      .catch(error => {\n        stream.emit('error', error);\n        stream.end();\n      });\n  }\n\n  return apiStreamXmlService;\n}\n\nfunction attrFinder (attrs) {\n  var soFar = '';\n  var allAttrs = {};\n  var allAttrsRegex = {};\n  var attrsFound = 0;\n\n  attrs.forEach(a => {\n    allAttrsRegex[a] = new RegExp(a + '=\"([^\"]+)\"');\n  });\n\n  return through(function (chunk, enc, done) {\n    if (attrsFound !== attrs.length) {\n      soFar += String(chunk);\n      attrs.forEach(attr => {\n        if (allAttrs[attr]) return;\n\n        var val = soFar.match(allAttrsRegex[attr]);\n        if (val) {\n          allAttrs[attr] = val[1];\n          this.emit(attr, allAttrs[attr]);\n          attrsFound++;\n        }\n      });\n      if (attrsFound === attrs.length) {\n        soFar = null;\n      }\n    }\n\n    this.push(chunk);\n\n    done();\n  });\n}\n"]},"metadata":{},"sourceType":"script"}