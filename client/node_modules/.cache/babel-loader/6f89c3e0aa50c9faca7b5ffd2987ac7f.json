{"ast":null,"code":"var duplexify = require('duplexify');\n\nvar through = require('through2');\n\nvar bufferFrom = require('buffer-from');\n\nvar noop = function () {};\n\nvar isObject = function (data) {\n  return !Buffer.isBuffer(data) && typeof data !== 'string';\n};\n\nvar peek = function (opts, onpeek) {\n  if (typeof opts === 'number') opts = {\n    maxBuffer: opts\n  };\n  if (typeof opts === 'function') return peek(null, opts);\n  if (!opts) opts = {};\n  var maxBuffer = typeof opts.maxBuffer === 'number' ? opts.maxBuffer : 65535;\n  var strict = opts.strict;\n  var newline = opts.newline !== false;\n  var buffer = [];\n  var bufferSize = 0;\n  var dup = duplexify.obj();\n  var peeker = through.obj({\n    highWaterMark: 1\n  }, function (data, enc, cb) {\n    if (isObject(data)) return ready(data, null, cb);\n    if (!Buffer.isBuffer(data)) data = bufferFrom(data);\n\n    if (newline) {\n      var nl = Array.prototype.indexOf.call(data, 10);\n      if (nl > 0 && data[nl - 1] === 13) nl--;\n\n      if (nl > -1) {\n        buffer.push(data.slice(0, nl));\n        return ready(Buffer.concat(buffer), data.slice(nl), cb);\n      }\n    }\n\n    buffer.push(data);\n    bufferSize += data.length;\n    if (bufferSize < maxBuffer) return cb();\n    if (strict) return cb(new Error('No newline found'));\n    ready(Buffer.concat(buffer), null, cb);\n  });\n\n  var onpreend = function () {\n    if (strict) return dup.destroy(new Error('No newline found'));\n    dup.cork();\n    ready(Buffer.concat(buffer), null, function (err) {\n      if (err) return dup.destroy(err);\n      dup.uncork();\n    });\n  };\n\n  var ready = function (data, overflow, cb) {\n    dup.removeListener('preend', onpreend);\n    onpeek(data, function (err, parser) {\n      if (err) return cb(err);\n      dup.setWritable(parser);\n      dup.setReadable(parser);\n      if (data) parser.write(data);\n      if (overflow) parser.write(overflow);\n      overflow = buffer = peeker = null; // free the data\n\n      cb();\n    });\n  };\n\n  dup.on('preend', onpreend);\n  dup.setWritable(peeker);\n  return dup;\n};\n\nmodule.exports = peek;","map":{"version":3,"sources":["C:/Users/sebas/Desktop/folders/Jobs/Elaastacloud/client/node_modules/peek-stream/index.js"],"names":["duplexify","require","through","bufferFrom","noop","isObject","data","Buffer","isBuffer","peek","opts","onpeek","maxBuffer","strict","newline","buffer","bufferSize","dup","obj","peeker","highWaterMark","enc","cb","ready","nl","Array","prototype","indexOf","call","push","slice","concat","length","Error","onpreend","destroy","cork","err","uncork","overflow","removeListener","parser","setWritable","setReadable","write","on","module","exports"],"mappings":"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","sourcesContent":["var duplexify = require('duplexify')\nvar through = require('through2')\nvar bufferFrom = require('buffer-from')\n\nvar noop = function() {}\n\nvar isObject = function(data) {\n  return !Buffer.isBuffer(data) && typeof data !== 'string'\n}\n\nvar peek = function(opts, onpeek) {\n  if (typeof opts === 'number') opts = {maxBuffer:opts}\n  if (typeof opts === 'function') return peek(null, opts)\n  if (!opts) opts = {}\n\n  var maxBuffer = typeof opts.maxBuffer === 'number' ? opts.maxBuffer : 65535\n  var strict = opts.strict\n  var newline = opts.newline !== false\n\n  var buffer = []\n  var bufferSize = 0\n  var dup = duplexify.obj()\n\n  var peeker = through.obj({highWaterMark:1}, function(data, enc, cb) {\n    if (isObject(data)) return ready(data, null, cb)\n    if (!Buffer.isBuffer(data)) data = bufferFrom(data)\n\n    if (newline) {\n      var nl = Array.prototype.indexOf.call(data, 10)\n      if (nl > 0 && data[nl-1] === 13) nl--\n\n      if (nl > -1) {\n        buffer.push(data.slice(0, nl))\n        return ready(Buffer.concat(buffer), data.slice(nl), cb)\n      }\n    }\n\n    buffer.push(data)\n    bufferSize += data.length\n\n    if (bufferSize < maxBuffer) return cb()\n    if (strict) return cb(new Error('No newline found'))\n    ready(Buffer.concat(buffer), null, cb)\n  })\n\n  var onpreend = function() {\n    if (strict) return dup.destroy(new Error('No newline found'))\n    dup.cork()\n    ready(Buffer.concat(buffer), null, function(err) {\n      if (err) return dup.destroy(err)\n      dup.uncork()\n    })\n  }\n\n  var ready = function(data, overflow, cb) {\n    dup.removeListener('preend', onpreend)\n    onpeek(data, function(err, parser) {\n      if (err) return cb(err)\n\n      dup.setWritable(parser)\n      dup.setReadable(parser)\n\n      if (data) parser.write(data)\n      if (overflow) parser.write(overflow)\n\n      overflow = buffer = peeker = null // free the data\n      cb()\n    })\n  }\n\n  dup.on('preend', onpreend)\n  dup.setWritable(peeker)\n\n  return dup\n}\n\nmodule.exports = peek\n"]},"metadata":{},"sourceType":"script"}