{"ast":null,"code":"module.exports = apiStreamJsonServiceFactory;\n\nvar JSONStream = require('JSONStream');\n\nvar through = require('through2');\n\nvar pump = require('pump');\n\nfunction apiStreamJsonServiceFactory(opts) {\n  function apiStreamJsonService(jsonFilterKey, req) {\n    var outputStream = through.obj();\n\n    if (req.url.endsWith('.json')) {\n      streamSingleItem(req, outputStream);\n    } else {\n      streamAllData(jsonFilterKey, req, outputStream);\n    }\n\n    return outputStream;\n  }\n\n  function streamSingleItem(req, stream) {\n    opts.apiService(req).then(result => {\n      stream.emit('total', 1);\n      stream.write(result);\n      stream.end();\n    });\n  }\n\n  function streamAllData(jsonFilterKey, req, stream) {\n    if (!req.responseType) req.responseType = 'stream';\n    if (!req.params) req.params = {};\n    if (!req.params.cursorMark) req.params.cursorMark = '*';\n    if (!req.params.pageSize) req.params.pageSize = 100;\n    req.params.format = 'json'; // only json is supported for streaming\n\n    return opts.apiService(req).then(result => {\n      var header;\n      var jsonStream = JSONStream.parse(jsonFilterKey);\n      jsonStream.on('data', data => stream.write(data));\n      jsonStream.on('header', h => {\n        header = h;\n\n        if (header.metadata && req.params.page === 1) {\n          stream.emit('total', header.metadata.resultSet.count);\n        } else if (req.params.cursorMark === '*' && !header.metadata) {\n          // emit total on first response\n          stream.emit('total', header.total);\n        }\n      }); // pipe result -> jsonStream\n\n      pump(result, jsonStream, err => {\n        if (err) console.error(err);\n\n        if (header.nextCursorMark && header.nextCursorMark === req.params.cursorMark) {\n          stream.end();\n        } else if (header.metadata) {\n          // openBox paginate\n          if (header.metadata.page.current === header.metadata.page.total) {\n            stream.end();\n          } else {\n            req.params = Object.assign({}, req.params, {\n              page: header.metadata.page.current + 1\n            });\n            streamAllData(jsonFilterKey, req, stream).catch(err => {\n              throw err;\n            });\n          }\n        } else if (!header.nextCursorMark) {\n          // endpoint does not have cursorMark support\n          stream.end();\n        } else {\n          req.params = Object.assign({}, req.params, {\n            cursorMark: header.nextCursorMark\n          });\n          streamAllData(jsonFilterKey, req, stream).catch(err => {\n            throw err;\n          });\n        }\n      });\n    }).catch(error => {\n      stream.emit('error', error);\n      stream.end();\n    });\n  }\n\n  return apiStreamJsonService;\n}","map":{"version":3,"sources":["C:/Users/sebas/Desktop/folders/Jobs/Elaastacloud/client/node_modules/bestbuy/lib/api.stream.json.service.js"],"names":["module","exports","apiStreamJsonServiceFactory","JSONStream","require","through","pump","opts","apiStreamJsonService","jsonFilterKey","req","outputStream","obj","url","endsWith","streamSingleItem","streamAllData","stream","apiService","then","result","emit","write","end","responseType","params","cursorMark","pageSize","format","header","jsonStream","parse","on","data","h","metadata","page","resultSet","count","total","err","console","error","nextCursorMark","current","Object","assign","catch"],"mappings":"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","sourcesContent":["module.exports = apiStreamJsonServiceFactory;\n\nvar JSONStream = require('JSONStream');\nvar through = require('through2');\nvar pump = require('pump');\n\nfunction apiStreamJsonServiceFactory (opts) {\n  function apiStreamJsonService (jsonFilterKey, req) {\n    var outputStream = through.obj();\n\n    if (req.url.endsWith('.json')) {\n      streamSingleItem(req, outputStream);\n    } else {\n      streamAllData(jsonFilterKey, req, outputStream);\n    }\n    return outputStream;\n  }\n\n  function streamSingleItem (req, stream) {\n    opts.apiService(req).then(result => {\n      stream.emit('total', 1);\n      stream.write(result);\n      stream.end();\n    });\n  }\n\n  function streamAllData (jsonFilterKey, req, stream) {\n    if (!req.responseType) req.responseType = 'stream';\n    if (!req.params) req.params = {};\n\n    if (!req.params.cursorMark) req.params.cursorMark = '*';\n    if (!req.params.pageSize) req.params.pageSize = 100;\n\n    req.params.format = 'json'; // only json is supported for streaming\n\n    return opts.apiService(req).then(result => {\n      var header;\n      var jsonStream = JSONStream.parse(jsonFilterKey);\n\n      jsonStream.on('data', data => stream.write(data));\n      jsonStream.on('header', h => {\n        header = h;\n        if (header.metadata && req.params.page === 1) {\n          stream.emit('total', header.metadata.resultSet.count);\n        } else if (req.params.cursorMark === '*' && !header.metadata) {\n          // emit total on first response\n          stream.emit('total', header.total);\n        }\n      });\n\n      // pipe result -> jsonStream\n      pump(result, jsonStream, err => {\n        if (err) console.error(err);\n        if (header.nextCursorMark && header.nextCursorMark === req.params.cursorMark) {\n          stream.end();\n        } else if (header.metadata) {\n          // openBox paginate\n          if (header.metadata.page.current === header.metadata.page.total) {\n            stream.end();\n          } else {\n            req.params = Object.assign({}, req.params, { page: header.metadata.page.current + 1 });\n            streamAllData(jsonFilterKey, req, stream).catch(err => { throw err; });\n          }\n        } else if (!header.nextCursorMark) {\n          // endpoint does not have cursorMark support\n          stream.end();\n        } else {\n          req.params = Object.assign({}, req.params, { cursorMark: header.nextCursorMark });\n          streamAllData(jsonFilterKey, req, stream).catch(err => { throw err; });\n        }\n      });\n    })\n      .catch(error => {\n        stream.emit('error', error);\n        stream.end();\n      });\n  }\n\n  return apiStreamJsonService;\n}\n"]},"metadata":{},"sourceType":"script"}