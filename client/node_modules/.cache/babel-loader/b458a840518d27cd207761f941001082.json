{"ast":null,"code":"module.exports = recommendationsEndpoint;\n\nfunction recommendationsEndpoint(opts) {\n  return function recommendations(path, criteria, callback) {\n    if (typeof criteria === 'function' && !callback) {\n      callback = criteria;\n      criteria = null;\n    }\n\n    var url;\n\n    if (path === 'alsoViewed') {\n      if (typeof criteria !== 'string' && typeof criteria !== 'number') {\n        var criteriaErr = new Error('Recommendations endpoint requires 2nd parameter to be a SKU for the \"' + path + '\" method');\n\n        if (callback) {\n          callback(criteriaErr);\n        }\n\n        return Promise.reject(criteriaErr);\n      }\n\n      url = `${opts.url}/beta/products/${criteria}/alsoViewed`;\n    } else if (path === 'trendingViewed' || path === 'mostViewed') {\n      if (typeof criteria === 'function') {\n        var criteriaFuncErr = new Error('Unhandled parameter type');\n\n        if (callback) {\n          callback(criteriaFuncErr);\n        }\n\n        return Promise.reject(criteriaFuncErr);\n      }\n\n      url = `${opts.url}/beta/products/${path}`;\n    } else {\n      var pathErr = new Error(`Unrecognized path \"${path}\"`);\n\n      if (callback) {\n        callback(pathErr);\n      }\n\n      return Promise.reject(pathErr);\n    }\n\n    return opts.apiService({\n      url\n    }, callback);\n  };\n}","map":{"version":3,"sources":["C:/Users/sebas/Desktop/folders/Jobs/Elaastacloud/client/node_modules/bestbuy/lib/recommendations.js"],"names":["module","exports","recommendationsEndpoint","opts","recommendations","path","criteria","callback","url","criteriaErr","Error","Promise","reject","criteriaFuncErr","pathErr","apiService"],"mappings":"AAAAA,MAAM,CAACC,OAAP,GAAiBC,uBAAjB;;AAEA,SAASA,uBAAT,CAAkCC,IAAlC,EAAwC;AACtC,SAAO,SAASC,eAAT,CAA0BC,IAA1B,EAAgCC,QAAhC,EAA0CC,QAA1C,EAAoD;AACzD,QAAI,OAAOD,QAAP,KAAoB,UAApB,IAAkC,CAACC,QAAvC,EAAiD;AAC/CA,MAAAA,QAAQ,GAAGD,QAAX;AACAA,MAAAA,QAAQ,GAAG,IAAX;AACD;;AAED,QAAIE,GAAJ;;AAEA,QAAIH,IAAI,KAAK,YAAb,EAA2B;AACzB,UAAI,OAAOC,QAAP,KAAoB,QAApB,IAAgC,OAAOA,QAAP,KAAoB,QAAxD,EAAkE;AAChE,YAAIG,WAAW,GAAG,IAAIC,KAAJ,CAAU,0EAA0EL,IAA1E,GAAiF,UAA3F,CAAlB;;AACA,YAAIE,QAAJ,EAAc;AACZA,UAAAA,QAAQ,CAACE,WAAD,CAAR;AACD;;AACD,eAAOE,OAAO,CAACC,MAAR,CAAeH,WAAf,CAAP;AACD;;AACDD,MAAAA,GAAG,GAAI,GAAEL,IAAI,CAACK,GAAI,kBAAiBF,QAAS,aAA5C;AACD,KATD,MASO,IAAID,IAAI,KAAK,gBAAT,IAA6BA,IAAI,KAAK,YAA1C,EAAwD;AAC7D,UAAI,OAAOC,QAAP,KAAoB,UAAxB,EAAoC;AAClC,YAAIO,eAAe,GAAG,IAAIH,KAAJ,CAAU,0BAAV,CAAtB;;AACA,YAAIH,QAAJ,EAAc;AACZA,UAAAA,QAAQ,CAACM,eAAD,CAAR;AACD;;AACD,eAAOF,OAAO,CAACC,MAAR,CAAeC,eAAf,CAAP;AACD;;AACDL,MAAAA,GAAG,GAAI,GAAEL,IAAI,CAACK,GAAI,kBAAiBH,IAAK,EAAxC;AACD,KATM,MASA;AACL,UAAIS,OAAO,GAAG,IAAIJ,KAAJ,CAAW,sBAAqBL,IAAK,GAArC,CAAd;;AACA,UAAIE,QAAJ,EAAc;AACZA,QAAAA,QAAQ,CAACO,OAAD,CAAR;AACD;;AACD,aAAOH,OAAO,CAACC,MAAR,CAAeE,OAAf,CAAP;AACD;;AAED,WAAOX,IAAI,CAACY,UAAL,CAAgB;AAAEP,MAAAA;AAAF,KAAhB,EAAyBD,QAAzB,CAAP;AACD,GAnCD;AAoCD","sourcesContent":["module.exports = recommendationsEndpoint;\n\nfunction recommendationsEndpoint (opts) {\n  return function recommendations (path, criteria, callback) {\n    if (typeof criteria === 'function' && !callback) {\n      callback = criteria;\n      criteria = null;\n    }\n\n    var url;\n\n    if (path === 'alsoViewed') {\n      if (typeof criteria !== 'string' && typeof criteria !== 'number') {\n        var criteriaErr = new Error('Recommendations endpoint requires 2nd parameter to be a SKU for the \"' + path + '\" method');\n        if (callback) {\n          callback(criteriaErr);\n        }\n        return Promise.reject(criteriaErr);\n      }\n      url = `${opts.url}/beta/products/${criteria}/alsoViewed`;\n    } else if (path === 'trendingViewed' || path === 'mostViewed') {\n      if (typeof criteria === 'function') {\n        var criteriaFuncErr = new Error('Unhandled parameter type');\n        if (callback) {\n          callback(criteriaFuncErr);\n        }\n        return Promise.reject(criteriaFuncErr);\n      }\n      url = `${opts.url}/beta/products/${path}`;\n    } else {\n      var pathErr = new Error(`Unrecognized path \"${path}\"`);\n      if (callback) {\n        callback(pathErr);\n      }\n      return Promise.reject(pathErr);\n    }\n\n    return opts.apiService({ url }, callback);\n  };\n}\n"]},"metadata":{},"sourceType":"script"}